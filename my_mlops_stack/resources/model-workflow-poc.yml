common_permissions: &permissions
  permissions:
    - level: CAN_VIEW
      group_name: users

resources:
  jobs:
    model_training_job:
      name: ${bundle.target}-airbnb-workflow
      tasks:
        - task_key: Train
          notebook_task:
            notebook_path: ../training/notebooks/ModelTraining.py
            base_parameters:
              env: ${bundle.target}
              experiment_name: ${var.experiment_name}
              model_name: ${var.model_name}
              catalog: ${var.catalog}
              schema: ${var.schema}
              git_source_info: url:${bundle.git.origin_url}; branch:${bundle.git.branch}; commit:${bundle.git.commit}
          existing_cluster_id: ${var.cluster_id}
        - task_key: ModelValidation
          depends_on:
            - task_key: Train
          notebook_task:
            notebook_path: ../validation/notebooks/validation.py
            base_parameters:
              experiment_name: ${var.experiment_name}
              run_mode: dry_run
              enable_baseline_comparison: "true"
              model_type: regressor
              targets: price
              git_source_info: url:${bundle.git.origin_url}; branch:${bundle.git.branch}; commit:${bundle.git.commit}
          existing_cluster_id: ${var.cluster_id}
        - task_key: ModelDeployment
          depends_on:
            - task_key: ModelValidation
          notebook_task:
            notebook_path: ../deployment/model_deployment/notebooks/ModelDeployment_poc.py
            base_parameters:
              env: ${bundle.target}
              git_source_info: url:${bundle.git.origin_url}; branch:${bundle.git.branch}; commit:${bundle.git.commit}
          existing_cluster_id: ${var.cluster_id}
        - task_key: ModelServing
          depends_on:
            - task_key: ModelDeployment
          notebook_task:
            notebook_path: ../deployment/model_serving/notebooks/ModelServing.py
            base_parameters:
              env: ${bundle.target}
              # git source information of current ML resource deployment. It will be persisted as part of the workflow run
              git_source_info: url:${bundle.git.origin_url}; branch:${bundle.git.branch}; commit:${bundle.git.commit}
          existing_cluster_id: ${var.cluster_id}
      schedule:
        quartz_cron_expression: "0 0 9 * * ?" # daily at 9am
        timezone_id: UTC
      <<: *permissions
      # If you want to turn on notifications for this job, please uncomment the below code,
      # and provide a list of emails to the on_failure argument.
      #
      #  email_notifications:
      #    on_failure:
      #      - first@company.com
      #      - second@company.com
